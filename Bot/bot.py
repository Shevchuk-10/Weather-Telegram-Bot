import os
import requests
from dotenv import load_dotenv
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑–º—ñ–Ω–Ω—ñ –∑ .env
load_dotenv()

# –¢–æ–∫–µ–Ω–∏ (–∑ .env —Ñ–∞–π–ª—É)
WEATHER_API_KEY = os.getenv("WEATHER_API_KEY")
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
if not WEATHER_API_KEY or not TELEGRAM_TOKEN:
    print("‚ùå –ü–æ–º–∏–ª–∫–∞: –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ –∑–º—ñ–Ω–Ω—ñ WEATHER_API_KEY –∞–±–æ TELEGRAM_TOKEN")
    exit(1)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start"""
    await update.message.reply_text("–ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç –ø–æ–≥–æ–¥–∏. –ù–∞–ø–∏—à—ñ—Ç—å –Ω–∞–∑–≤—É –º—ñ—Å—Ç–∞, —â–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –ø–æ–≥–æ–¥—É.")


async def get_weather(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–æ–±–Ω–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å (–æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ–≥–æ–¥–∏)"""
    city = update.message.text.strip()

    if not city:
        await update.message.reply_text("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –º—ñ—Å—Ç–∞.")
        return

    url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={WEATHER_API_KEY}&units=metric&lang=ua"

    try:
        response = requests.get(url, timeout=5)
        data = response.json()

        if data.get("cod") != 200:
            await update.message.reply_text("–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ –º—ñ—Å—Ç–æ. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–Ω—è.")
            return

        # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–æ –ø–æ–≥–æ–¥—É
        city_name = data["name"]
        temperature = data["main"]["temp"]
        feels_like = data["main"]["feels_like"]
        description = data["weather"][0]["description"]
        humidity = data["main"]["humidity"]

        # –§–æ—Ä–º—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        weather_message = (
            f"üå§ –ü–æ–≥–æ–¥–∞ —É {city_name}:\n"
            f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temperature}¬∞C\n"
            f"ü§î –í—ñ–¥—á—É–≤–∞—î—Ç—å—Å—è —è–∫: {feels_like}¬∞C\n"
            f"üìú –û–ø–∏—Å: {description.capitalize()}\n"
            f"üíß –í–æ–ª–æ–≥—ñ—Å—Ç—å: {humidity}%"
        )

        await update.message.reply_text(weather_message)

    except requests.exceptions.RequestException:
        await update.message.reply_text("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –¥–∞–Ω–∏—Ö –ø—Ä–æ –ø–æ–≥–æ–¥—É. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")
    except Exception as e:
        await update.message.reply_text(f"–°—Ç–∞–ª–∞—Å—è –Ω–µ–ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}")


def main():
    """–ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞"""
    application = Application.builder().token(TELEGRAM_TOKEN).build()

    # –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, get_weather))

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π...")
    application.run_polling()


# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ü–µ–π —Ñ–∞–π–ª –∑–∞–ø—É—â–µ–Ω–∏–π –Ω–∞–ø—Ä—è–º—É
if __name__ == "__main__":
    main()
